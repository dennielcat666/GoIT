{"version":3,"sources":["../src/view.js"],"names":["View","model","self","init","wrapper","$","html","elements","input","addBtn","listContainer","renderList","data","i","length","listItem","class","spanElDelete","appendTo","spanElEdit","append"],"mappings":";;;;;;;AAAO,SAASA,IAAT,CAAcC,KAAd,EAAqB;AACpB,MAAIC,IAAI,GAAG,IAAX;;AAEA,WAASC,IAAT,GAAgB;AAA4B;AACxC,QAAIC,OAAO,GAAGC,CAAC,CAAC,UAAD,CAAD,CAAcC,IAAd,EAAd;AACAJ,IAAAA,IAAI,CAACK,QAAL,GAAgB;AAAwB;AACpCC,MAAAA,KAAK,EAAEH,CAAC,CAAC,aAAD,CADI;AACwB;AACpCI,MAAAA,MAAM,EAAEJ,CAAC,CAAC,WAAD,CAFG;AAEyB;AACrCK,MAAAA,aAAa,EAAEL,CAAC,CAAC,cAAD,CAHJ,CAG0B;;AAH1B,KAAhB;AAKAH,IAAAA,IAAI,CAACS,UAAL,CAAgBV,KAAK,CAACW,IAAtB,EAPY,CAO4B;AAC3C;;AAAA;;AAEDV,EAAAA,IAAI,CAACS,UAAL,GAAkB,UAASC,IAAT,EAAe;AAAW;AACxCV,IAAAA,IAAI,CAACK,QAAL,CAAcG,aAAd,CAA4BJ,IAA5B,CAAiC,EAAjC;;AACA,SAAK,IAAIO,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAID,IAAI,CAACE,MAAL,GAAc,CAAnC,EAAsCD,CAAC,EAAvC,EAA2C;AACvC,UAAIE,QAAQ,GAAGV,CAAC,CAAC,MAAD,EAAS;AAACW,QAAAA,KAAK,EAAE;AAAR,OAAT,CAAD,CAAgCV,IAAhC,CAAqCM,IAAI,CAACC,CAAD,CAAzC,CAAf,CADuC,CACkC;;AACzE,UAAII,YAAY,GAAGZ,CAAC,CAAC,QAAD,EAAW;AAAC,sBAAcO,IAAI,CAACC,CAAD,CAAnB;AAAwBG,QAAAA,KAAK,EAAE;AAA/B,OAAX,CAAD,CAA2DV,IAA3D,CAAgE,GAAhE,EAAqEY,QAArE,CAA8EH,QAA9E,CAAnB;AACA,UAAII,UAAU,GAAGd,CAAC,CAAC,QAAD,EAAW;AAAC,sBAAcO,IAAI,CAACC,CAAD,CAAnB;AAAwBG,QAAAA,KAAK,EAAE;AAA/B,OAAX,CAAD,CAAyDV,IAAzD,CAA8D,GAA9D,EAAmEY,QAAnE,CAA4EH,QAA5E,CAAjB;AACAb,MAAAA,IAAI,CAACK,QAAL,CAAcG,aAAd,CAA4BU,MAA5B,CAAmCL,QAAnC,EAJuC,CAIa;AACvD;AAEJ,GATD;;AAWAZ,EAAAA,IAAI,GAxBgB,CAwBwB;AACnD","sourcesContent":["export function View(model) {\r\n        var self = this;\r\n        \r\n        function init() {                           //вставка каркасса. вызывается 1 раз при загрузке приложения (при инициализвции)\r\n            var wrapper = $('.wrapper').html();\r\n            self.elements = {                       //место хранения ссылок на ДОМ элементы, которые отвечают за кнопку add и delete\r\n                input: $('.item-value'),            //input с которого считываем информацию\r\n                addBtn: $('.item-add'),              //кнопка\r\n                listContainer: $('.common-list')      //ul в который будем вставлять список \r\n            };\r\n            self.renderList(model.data);            //один раз рендерим список. data из Model (функция выше)\r\n        };\r\n    \r\n        self.renderList = function(data) {          //вставка элементов списка в ul\r\n            self.elements.listContainer.html('')\r\n            for (let i = 0; i <= data.length - 1; i++) {\r\n                var listItem = $('<li>', {class: 'list-item'}).html(data[i]);            //компеляция данных шаблонизатором. контент для рендеринга, передаем data\r\n                var spanElDelete = $('<span>', {'data-value': data[i], class: 'item-delete'}).html('X').appendTo(listItem);\r\n                var spanElEdit = $('<span>', {'data-value': data[i], class: 'item-edit'}).html('O').appendTo(listItem);\r\n                self.elements.listContainer.append(listItem);       //вставляем list в listContainer \r\n            }\r\n                         \r\n        };\r\n    \r\n        init();                                     //вызов вставки\r\n}\r\n\r\n"],"file":"view.js"}